:mod:`arkouda.security`
=======================

.. py:module:: arkouda.security


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   arkouda.security.generate_token
   arkouda.security.get_home_directory
   arkouda.security.get_arkouda_client_directory
   arkouda.security.get_username
   arkouda.security.generate_username_token_json


.. data:: username_tokenizer
   

   

.. function:: generate_token(length: int = 32) -> str

   Uses the secrets.token_hex() method to generate a
   a hexidecimal token

   :param int length: desired length of token
   :return: hexidecimal string
   :rtype: str


.. function:: get_home_directory() -> str

   A platform-independent means of finding path to
   the current user's home directory

   :return: string corresponding to home directory path
   :rtype: str


.. function:: get_arkouda_client_directory() -> str

   A platform-independent means of finding path to
   the current user's .arkouda directory where artifacts
   such as server access tokens are stored.

   The default implementation is to place the .arkouda
   directory in the current user's home directory. The
   default can be overridden by seting the ARKOUDA_HOME
   environment variable.

   :return: string corresponding to .arkouda directory path
   :rtype: str


.. function:: get_username() -> str

   A platform-independent means of retrieving the current user's
   username for the host system.

   :return: the username string
   :rtype: str
   :raise: EnvironmentError if the host OS is unsupported


.. function:: generate_username_token_json(token: str) -> str

   Generates a JSON object encapsulating the user's username
   and token for connecting to an arkouda server with basic
   authentication enabled

   :param str token: the token to be used to access arkouda server
   :return: JSON-formatted string
   :rtype: str


