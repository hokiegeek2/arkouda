.. default-domain:: chpl

.. module:: CommAggregation

CommAggregation
===============
**Usage**

.. code-block:: chapel

   use CommAggregation;


or

.. code-block:: chapel

   import CommAggregation;

.. function:: proc newDstAggregator(type elemType, param useUnorderedCopy = false)

   Creates a new destination aggregator (dst/lhs will be remote). 

.. function:: proc newSrcAggregator(type elemType, param useUnorderedCopy = false)

   Creates a new source aggregator (src/rhs will be remote). 

.. record:: DstAggregator

   
   * Aggregates copy(ref dst, src). Optimized for when src is local.
   * Not parallel safe and is expected to be created on a per-task basis
   * High memory usage since there are per-destination buffers
   


   .. attribute:: type elemType

   .. attribute:: const bufferSize = dstBuffSize

   .. attribute:: const myLocaleSpace = LocaleSpace

   .. attribute:: var itersSinceYield: int

   .. attribute:: var buffer: [myLocaleSpace] [0..#bufferSize] (c_void_ptr, elemType)

   .. attribute:: var bufferIdxs: [myLocaleSpace] int

   .. method:: proc deinit()

   .. method:: proc flush()

   .. method:: proc copy(ref dst: elemType, const in srcVal: elemType)

   .. method:: proc _flushBuffer(loc: int, ref bufferIdx)

.. record:: SrcAggregator

   
   * Aggregates copy(ref dst, const ref src). Only works when dst is local.
   * Not parallel safe and is expected to be created on a per task basis
   * High memory usage since there are per-destination buffers
   


   .. attribute:: type elemType

   .. attribute:: const bufferSize = srcBuffSize

   .. attribute:: const myLocaleSpace = LocaleSpace

   .. attribute:: var itersSinceYield: int

   .. attribute:: var dstBuffer: [myLocaleSpace] [0..#bufferSize] c_void_ptr

   .. attribute:: var srcBuffer: [myLocaleSpace] [0..#bufferSize] c_void_ptr

   .. attribute:: var bufferIdxs: [myLocaleSpace] int

   .. method:: proc deinit()

   .. method:: proc flush()

   .. method:: proc copy(ref dst: elemType, const ref src: elemType)

   .. method:: proc _flushBuffer(loc: int, ref bufferIdx)

