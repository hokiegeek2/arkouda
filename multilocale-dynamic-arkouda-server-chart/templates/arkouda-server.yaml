apiVersion: v1
kind: Pod
metadata:
  name: arkouda-server
  labels: 
    app: arkouda-server
spec:      
      restartPolicy: Never
      containers:
        {{- if eq .Values.server.metrics.collectMetrics true }}
        - name: arkouda-metrics-server
          image: hokiegeek2/arkouda-metrics-exporter:{{ .Values.releaseVersion }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command: [ "python3", "arkouda/arkouda/monitoring.py" ]
          ports:
          - containerPort: {{ .Values.metricsServer.port }}
            hostPort: 5080
          env:
            - name: EXPORT_PORT
              value: {{ .Values.metricsServer.port | quote}}
            - name: POLLING_INTERVAL_SECONDS
              value: {{ .Values.metricsServer.pollingIntervalSeconds | quote}}
            - name: ARKOUDA_SERVER_NAME
              value: {{ .Values.metricsServer.arkoudaServerName | quote}}
            - name: METRICS_SERVICE_NAME
              value: {{ .Values.server.metrics.service.name | quote}}
            - name: METRICS_SERVICE_PORT
              value: {{ .Values.server.metrics.service.port | quote}}
        {{- end }}
        - name: arkouda-server
          image: hokiegeek2/udp-arkouda-server:{{ .Values.releaseVersion }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command: [ "sh", "/opt/start-arkouda-server.sh" ]
          lifecycle:
            preStop:
              exec:
                command: ["python3","-c","import os; import arkouda as ak; ak.connect('{}.{}'.format(os.environ['EXTERNAL_SERVICE_NAME'],os.environ['NAMESPACE'])); ak.shutdown()"]
          resources:
            requests:
              cpu: {{ .Values.server.resources.requests.cpu }}
              memory: {{ .Values.server.resources.requests.memory }}
            limits:
              cpu: {{ .Values.server.resources.limits.cpu }}
              memory: {{ .Values.server.resources.limits.memory }}
          ports:
          - containerPort: {{ .Values.server.port }}
            hostPort: 5555
          - containerPort: 22
            hostPort: 25
          volumeMounts:
          - name: ssl
            mountPath: "/etc/ssl/arkouda"
          - name: ssh
            mountPath: "/home/ubuntu/ssh-keys"
          {{- if eq .Values.external.persistence.enabled true }}
          - name: locale
            mountPath: {{ .Values.external.persistence.path }}
          {{- end }}
          - name: arkouda-server-launch-script
            mountPath: /opt/start-arkouda-server.sh
            subPath: start-arkouda-server.sh
          env:
            - name: MY_IP
              valueFrom:
                fieldRef: 
                  fieldPath: status.podIP
            - name: GASNET_MASTERIP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NUMLOCALES
              value: {{ .Values.server.numLocales | quote}}
            - name: SSH_SERVERS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: AUTHENTICATE
              value: {{ .Values.server.authenticate | quote}} 
            - name: VERBOSE
              value: {{ .Values.server.verbose | quote }}   
            - name: MEMTRACK
              value: {{ .Values.server.memTrack | quote }}
            - name: CHPL_RT_NUM_THREADS_PER_LOCALE
              value: {{ .Values.server.threadsPerLocale | quote }}
            - name: GASNET_SUPERNODE_MAXSIZE
              value: '1' 
            - name: CERT_FILE
              value: {{ .Values.external.certFile | quote }}
            - name: KEY_FILE
              value: {{ .Values.external.keyFile | quote }}
            - name: K8S_HOST
              value: {{ .Values.external.k8sHost | quote }} 
            - name: NAMESPACE
              value: {{ .Values.external.namespace }}
            - name: EXTERNAL_SERVICE_NAME
              value: {{ .Values.external.externalServiceName }}
            - name: EXTERNAL_SERVICE_PORT
              value: {{ .Values.external.externalServicePort | quote}}
            - name: EXTERNAL_SERVICE_TARGET_PORT
              value: {{ .Values.external.externalServiceTargetPort | quote}}
            - name: LOG_LEVEL  
              value: {{ .Values.server.logLevel }}    
            {{- if eq .Values.server.metrics.collectMetrics true }}
            - name: COLLECT_METRICS
              value: {{ .Values.server.metrics.collectMetrics | quote}}
            - name: METRICS_SERVICE_NAME
              value: {{ .Values.server.metrics.service.name }}
            - name: METRICS_SERVICE_PORT
              value: {{ .Values.server.metrics.service.port | quote}}
            - name: METRICS_SERVICE_TARGET_PORT
              value: {{ .Values.server.metrics.service.targetPort | quote}}
            {{- end }}
      volumes:              
        - name: ssl
          secret:
            secretName: arkouda-server 
        - name: ssh
          secret:
            secretName: arkouda-ssh
        {{- if eq .Values.external.persistence.enabled true }}
        - name: locale
          hostPath:
            path: {{ .Values.external.persistence.hostPath }}
        {{- end }}
        - name: arkouda-server-launch-script
          configMap:
            name: arkouda-server-launch-script
            items:
             - key: script
               path: start-arkouda-server.sh

